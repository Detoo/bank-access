#!/usr/bin/env python
# Copyright (c) The SimpleFIN Team
# See LICENSE for details.
from banka.args import listAccountsParser
from banka.ofx.client import OFXClient
from banka.ofx.parse import toJson, ofxToDict

from ofxparse.ofxparse import OfxParser
from StringIO import StringIO
import requests
import sys
import os


def log(msg):
    sys.stderr.write('%s\n' % (msg,))
    sys.stderr.flush()


def main(args):
    parser = listAccountsParser()
    args = parser.parse_args(args)
    start_date = args.start_date
    end_date = args.end_date

    client = OFXClient()

    log("Reading OFX server details")
    info_yml = os.path.abspath(os.path.join(__file__, '../info.yml'))
    client.readServerDetails(info_yml)

    log("Prompting for credentials")
    credentials = client.loginCredentials()

    log("Requesting accounts")
    payload = client.requestMaker.accountInfo(
                client.ofx_fi_org,
                client.ofx_fi_id,
                credentials['user_login'],
                credentials['user_password'])
    headers = client.requestMaker.httpHeaders()
    response = requests.post(client.ofx_url, data=payload, headers=headers)

    log(response.text)
    fh = StringIO(response.text)
    ofx = OfxParser.parse(fh)
    accounts = client.parseAccountList(ofx)

    log("Requesting statements")
    payload = client.requestMaker.accountStatements(
                client.ofx_fi_org,
                client.ofx_fi_id,
                credentials['user_login'],
                credentials['user_password'],
                accounts,
                start_date,
                end_date)
    headers = client.requestMaker.httpHeaders()
    response = requests.post(client.ofx_url, data=payload, headers=headers)

    assert response.status_code == 200, '%r %r: %r' % (response,
                                response.status_code, response.text)

    log(response.text)
    fh = StringIO(response.text)
    ofx = OfxParser.parse(fh)
    d = ofxToDict(ofx, client.domain)
    log(d)
    print toJson(d)


if __name__ == '__main__':
    main(sys.argv[1:])
